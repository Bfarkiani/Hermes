static_resources:
          
  listeners:
    - name: ingress_HTTP
      address:
        socket_address:
          address: 0.0.0.0
          port_value: 10000
      filter_chains:
        - filters:
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_HTTP
                access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog                
                route_config:              
                  name: remote_route
                  virtual_hosts:
                    - name: connect
                      domains: ["*"]
                      routes:                      
                        - match:
                            connect_matcher: {}
                            headers: 
                              - name: ":authority"
                                safe_regex_match:
                                  google_re2: {}
                                  regex: "^(www.)?org.onl.com(:[0-9]*)?"                                  
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s

                            cluster: org
                            upgrade_configs:
                              - upgrade_type: CONNECT
                                connect_config: {} 
                        - match:
                            connect_matcher: {}
                            headers: 
                              - name: ":authority"
                                safe_regex_match:
                                  google_re2: {}
                                  regex: "org.onl(:[0-9]*)?"
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                            cluster: org
                            upgrade_configs:
                              - upgrade_type: CONNECT
                                connect_config: {} 
                        - match:
                            prefix: "/org"                          
                            headers:
                              - name: ":authority"
                                safe_regex_match:
                                  google_re2: {}
                                  regex: "onl(:[0-9]*)?"
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                            cluster: org
                            
                        - match:
                            prefix: "/org"                           
                            headers:
                              - name: ":authority"
                                safe_regex_match:
                                  google_re2: {}
                                  regex: "^(www.)?onl.com(:[0-9]*)?"
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                            cluster: org    
                           
                        - match:
                            connect_matcher: {}
                          route:
                            cluster: cluster_proxy
                            upgrade_configs:
                              - upgrade_type: CONNECT
                                connect_config: {}
                        - match:
                            prefix: "/"                        
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                            cluster: cluster_proxy                                
                http2_protocol_options:
                  allow_connect: true
                http_filters:

                  - name: envoy.filters.http.dynamic_forward_proxy
                    typed_config:
                      '@type': type.googleapis.com/envoy.extensions.filters.http.dynamic_forward_proxy.v3.FilterConfig
                      dns_cache_config:
                        name: dynamic_forward_proxy_cache_config
                        dns_lookup_family: ALL
                        typed_dns_resolver_config:
                          name: envoy.network.dns_resolver.cares
                          typed_config:
                            "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
                            resolvers:
                            - socket_address:
                                address: "8.8.8.8"
                                port_value: 53
                            dns_resolver_options:
                              use_tcp_for_dns_lookups: true
                              no_default_search_domain: true
                  - name: envoy.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                http2_protocol_options:
                  allow_connect: true
                upgrade_configs:
                - upgrade_type: CONNECT                      
          transport_socket:
            name: envoy.transport_sockets.tls
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.transport_sockets.tls.v3.DownstreamTlsContext
              common_tls_context:
                tls_params:
                  tls_minimum_protocol_version: TLSv1_3
                  tls_maximum_protocol_version: TLSv1_3             
                tls_certificate_sds_secret_configs:
                  - name: "server_cert"

                  
                  
    - name: ingress_Video
      address:
        socket_address:
          protocol: TCP
          address: 0.0.0.0
          port_value: 7000 
      filter_chains:
        - filters:                
            - name: envoy.filters.network.http_connection_manager
              typed_config:
                "@type": type.googleapis.com/envoy.extensions.filters.network.http_connection_manager.v3.HttpConnectionManager
                stat_prefix: ingress_Video
                access_log:
                - name: envoy.access_loggers.stdout
                  typed_config:
                    "@type": type.googleapis.com/envoy.extensions.access_loggers.stream.v3.StdoutAccessLog                
                route_config:              
                  name: remote_route
                  virtual_hosts:
                    - name: ONL
                      domains: ["*"]
                      routes:
                        - match:
                            prefix: "/"
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s                          
                            cluster: service_udp

                        - match:
                            connect_matcher: {}
                          route:
                            timeout: 0s
                            idle_timeout: 0s
                            max_stream_duration:
                              max_stream_duration: 0s
                            cluster: service_udp
                http_filters:
                  - name: envoy.router
                    typed_config:
                      "@type": type.googleapis.com/envoy.extensions.filters.http.router.v3.Router
                http2_protocol_options:
                  allow_connect: true
                upgrade_configs:
                - upgrade_type: CONNECT-UDP

  clusters:
  - name: cluster_proxy
    lb_policy: CLUSTER_PROVIDED
    original_dst_lb_config:
      use_http_header: true
    connect_timeout: 5s
    cluster_type:
      name: envoy.clusters.dynamic_forward_proxy
      typed_config:
        '@type': type.googleapis.com/envoy.extensions.clusters.dynamic_forward_proxy.v3.ClusterConfig
        dns_cache_config:
          name: dynamic_forward_proxy_cache_config
          dns_lookup_family: ALL
          typed_dns_resolver_config:
            name: envoy.network.dns_resolver.cares
            typed_config:
              "@type": type.googleapis.com/envoy.extensions.network.dns_resolver.cares.v3.CaresDnsResolverConfig
              resolvers:
              - socket_address:
                  address: "8.8.8.8"
                  port_value: 53
              dns_resolver_options:
                use_tcp_for_dns_lookups: true
                no_default_search_domain: true


  - name: org
    connect_timeout: 5s
    type: STATIC
    lb_policy: ROUND_ROBIN
    load_assignment:
      cluster_name: org
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address: 192.168.9.1
                port_value: 10000
        - endpoint:
            address:
              socket_address:
                address: 192.168.4.1
                port_value: 10000


  - name: service_udp
    connect_timeout: 5s
    type: STATIC
    lb_policy: ROUND_ROBIN
    typed_extension_protocol_options:
      envoy.extensions.upstreams.http.v3.HttpProtocolOptions:
        "@type": type.googleapis.com/envoy.extensions.upstreams.http.v3.HttpProtocolOptions
        explicit_http_config:
          http2_protocol_options: {}    
    load_assignment:
      cluster_name: service_udp
      endpoints:
      - lb_endpoints:
        - endpoint:
            address:
              socket_address:
                address:  192.168.13.1 #192.168.170.130
                port_value: 7000 #9999          
